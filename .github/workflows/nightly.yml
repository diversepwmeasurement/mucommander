jobs:
  get-version:
    outputs:
      full_version: ${{ steps.mucommander_version.outputs.FULL_VERSION }}
      version: ${{ steps.mucommander_version.outputs.VERSION }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      id: mucommander_version
      name: Get version
      run: 'echo "FULL_VERSION=$(${{github.workspace}}/gradlew -q printFullVersionName)"
        >> $GITHUB_OUTPUT

        echo "VERSION=$(${{github.workspace}}/gradlew -q printVersionName)" >> $GITHUB_OUTPUT

        '
  upload-linux-artifacts:
    needs: get-version
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - continue-on-error: true
      uses: actions/setup-java@v4
      with:
        distribution: adopt
        java-version: '20'
    - continue-on-error: true
      name: Checkout 'release'
      uses: actions/checkout@v4
      with:
        path: release
        repository: mucommander/release
        token: ${{ secrets.RELEASE_REPO_TOKEN }}
    - continue-on-error: true
      name: Apply 'release' patches
      run: 'git config --global user.name gh-action

        git config --global user.email gh-action

        git am release/0001-set-credentials-to-Google-Drive.patch

        git am release/0002-set-credentials-to-Dropbox.patch

        '
    - continue-on-error: true
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      name: Build portable, tgz, deb, and rpm
      run: ./gradlew tgz portable deb rpm
    - continue-on-error: true
      name: Import GPG
      uses: crazy-max/ghaction-import-gpg@v6
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
    - continue-on-error: true
      name: Sign rpm
      run: 'rpmsign --key-id=''Arik Hadas'' --addsign "./build/distributions/mucommander-${{
        needs.get-version.outputs.version }}-1.x86_64.rpm"

        '
    - continue-on-error: true
      name: Upload portable
      uses: actions/upload-artifact@master
      with:
        name: mucommander-${{ needs.get-version.outputs.full_version }}-portable.zip
        path: ./build/distributions/mucommander-${{ needs.get-version.outputs.full_version
          }}-portable.zip
    - continue-on-error: true
      name: Upload tgz
      uses: actions/upload-artifact@master
      with:
        name: mucommander-${{ needs.get-version.outputs.full_version }}.tgz
        path: ./build/distributions/mucommander-${{ needs.get-version.outputs.full_version
          }}.tgz
    - continue-on-error: true
      name: Upload deb
      uses: actions/upload-artifact@master
      with:
        name: mucommander_${{ needs.get-version.outputs.version }}_amd64.deb
        path: ./build/distributions/mucommander_${{ needs.get-version.outputs.version
          }}_amd64.deb
    - continue-on-error: true
      name: Upload rpm
      uses: actions/upload-artifact@master
      with:
        name: mucommander-${{ needs.get-version.outputs.version }}-1.x86_64.rpm
        path: ./build/distributions/mucommander-${{ needs.get-version.outputs.version
          }}-1.x86_64.rpm
  upload-macos-artifacts:
    needs: get-version
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - continue-on-error: true
      name: Checkout 'release'
      uses: actions/checkout@v4
      with:
        path: release
        repository: mucommander/release
        token: ${{ secrets.RELEASE_REPO_TOKEN }}
    - continue-on-error: true
      name: Apply 'release' patches
      run: 'git config --global user.name gh-action

        git config --global user.email gh-action

        git am release/0001-set-credentials-to-Google-Drive.patch

        git am release/0002-set-credentials-to-Dropbox.patch

        git am release/0005-set-credentials-to-OneDrive.patch

        '
    - continue-on-error: true
      uses: actions/setup-java@v4
      with:
        distribution: adopt
        java-version: '20'
    - continue-on-error: true
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      name: Build dmg
      run: ./gradlew dmg -Parch=${{ matrix.arch }}
    - continue-on-error: true
      if: always()
      name: Upload dmg
      uses: actions/upload-artifact@master
      with:
        name: mucommander-${{ needs.get-version.outputs.full_version }}-${{ matrix.arch
          }}.dmg
        path: ./build/distributions/mucommander-${{ needs.get-version.outputs.full_version
          }}-${{ matrix.arch }}.dmg
    strategy:
      matrix:
        include:
        - arch: aarch64
          os: macos-14
        - arch: x86_64
          os: macos-12
  upload-windows-artifacts:
    needs: get-version
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - continue-on-error: true
      uses: actions/setup-java@v4
      with:
        distribution: adopt
        java-version: '20'
    - continue-on-error: true
      name: Checkout 'release'
      uses: actions/checkout@v4
      with:
        path: release
        repository: mucommander/release
        token: ${{ secrets.RELEASE_REPO_TOKEN }}
    - continue-on-error: true
      name: Apply 'release' patches
      run: 'git config --global user.name gh-action

        git config --global user.email gh-action

        git am release/0001-set-credentials-to-Google-Drive.patch

        git am release/0002-set-credentials-to-Dropbox.patch

        '
    - continue-on-error: true
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      name: Build msi
      run: ./gradlew msi
    - continue-on-error: true
      name: Upload msi
      uses: actions/upload-artifact@master
      with:
        name: mucommander-${{ needs.get-version.outputs.version }}.msi
        path: ./build/distributions/mucommander-${{ needs.get-version.outputs.version
          }}.msi
name: Nightly Build
on:
  repository_dispatch:
    types: trigger-ga___nightly.yml
